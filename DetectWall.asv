function wall = DetectWall(vector)
    global currentVelocity;
    global acceleration;
    global timeStep;
    
    wall = 0;
    %currentVelocity = acceleration*timeStep;
    newPosition = round([xPosition,yPosition] + currentVelocity*transpose(vector));
    
    nCurrentVelocity = currentVelocity + acceleration*timeStep;
    nnCurrentVelocity = nCurrentVelocity + acceleration*timeStep;
    nnnCurrentVelocity = nnCurrentVelocity + acceleration*timeStep;
    nnnnCurrentVelocity = nnnCurrentVelocity + acceleration*timeStep;
    nnnnnCurrentVelocity = nnnnCurrentVelocity + acceleration*timeStep;
    newPos = nnnnnCurrentVelocity*transpose(vector);
    if newPos(1) > xLength || newPos(1) <= 0 || newPos(2) > yLength || newPos(2) <= 0 
        wall = 1;
    end